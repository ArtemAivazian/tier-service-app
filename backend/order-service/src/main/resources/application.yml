server:
  port: ${PORT:0}

# EUREKA
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

spring:
  devtools:
    restart:
      enabled: true #automatically restart app after making changes
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://localhost:5444/orders
    username: "admin"
    password: "123"
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  #KAFKA
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: order
      auto-offset-reset: earliest
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    topic:
      name: productUpdatedTopic

gateway:
  ip: 10.0.56.5

logging:
  level:
    org.springframework.security: TRACE